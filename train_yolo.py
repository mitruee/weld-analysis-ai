"""
train_yolo.py ‚Äî —É–¥–æ–±–Ω–∞—è ¬´–æ–±—ë—Ä—Ç–∫–∞¬ª –≤–æ–∫—Ä—É–≥ Ultralytics YOLO v8.

–ü—Ä–∏–º–µ—Ä –∑–∞–ø—É—Å–∫–∞:
    –ù–∞ macbook:
    python train_yolo.py \
        --data data/data.yaml \
        --model yolov8s.pt \
        --epochs 30 \
        --imgsz 960 \
        --batch 4 \
        --device mps \
        --name YOLOv8_M2

    –ù–∞ windows:
    python train_yolo.py `
    --data data/data.yaml `
    --model yolov8s.pt `
    --epochs 30 `
    --imgsz 960 `
    --batch 16 `        # 8 –ì–ë –æ–±—ã—á–Ω–æ –¥–µ—Ä–∂–∏—Ç 16-24 –≤ FP16
    --device 0 `
    --half `            # FP16 —ç–∫–æ–Ω–æ–º–∏—Ç VRAM –∏ —É—Å–∫–æ—Ä—è–µ—Ç
    --workers 8 `       # –¥–ª—è Windows –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ –ø–æ—Ç–æ–∫–æ–≤
    --name YOLOv8_4060


"""
from __future__ import annotations

import argparse
import importlib.util
import subprocess
import sys
from pathlib import Path


def ensure_ultralytics() -> None:
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ª–∏ ultralytics;
    –µ—Å–ª–∏ –Ω–µ—Ç ‚Äî –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å—Ç–∞–≤–∏–º –µ—ë –≤ —Ç–µ–∫—É—â–∏–π virtualenv.
    """
    if importlib.util.find_spec("ultralytics") is None:
        print("üì¶ –ü–∞–∫–µ—Ç 'ultralytics' –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é ...")
        subprocess.check_call([sys.executable, "-m", "pip", "install", "-U", "ultralytics"])
    else:
        import ultralytics as _  # noqa: F401
        print("‚úÖ 'ultralytics' —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")


def parse_args() -> argparse.Namespace:
    ap = argparse.ArgumentParser(description="Training script for YOLO-v8")
    ap.add_argument("--data", type=Path, default=Path("data/data.yaml"),
                    help="–ü—É—Ç—å –∫ data.yaml")
    ap.add_argument("--model", default="yolov8s.pt",
                    help="–ë–∞–∑–æ–≤–∞—è –º–æ–¥–µ–ª—å –∏–ª–∏ –ø—É—Ç—å –∫ .pt –¥–ª—è –¥–æ–æ–±—É—á–µ–Ω–∏—è")
    ap.add_argument("--epochs", type=int, default=100,
                    help="–°–∫–æ–ª—å–∫–æ —ç–ø–æ—Ö –æ–±—É—á–∞—Ç—å")
    ap.add_argument("--imgsz", type=int, default=640,
                    help="–†–∞–∑–º–µ—Ä –≤—Ö–æ–¥–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π (–∫—Ä–∞—Ç–Ω–æ 32)")
    ap.add_argument("--batch", type=int, default=16,
                    help="–†–∞–∑–º–µ—Ä –±–∞—Ç—á–∞")
    ap.add_argument("--device", default="0",
                    help="GPU id, 'cpu' –∏–ª–∏ '0,1' –¥–ª—è –º—É–ª—å—Ç–∏-GPU")
    ap.add_argument("--name", default="exp",
                    help="–ò–º—è —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞ (–ø–∞–ø–∫–∞ –≤ runs/)")
    ap.add_argument("--resume", action="store_true",
                    help="–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–∏–π run —Å —Ç–µ–º –∂–µ --name")
    return ap.parse_args()


def main() -> None:
    args = parse_args()
    ensure_ultralytics()

    from ultralytics import YOLO  # –∏–º–ø–æ—Ä—Ç —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏

    model = YOLO(args.model)           # –∑–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–µ–¥–æ–±—É—á–µ–Ω–Ω—É—é –∏–ª–∏ –ø–æ—Å–ª–µ–¥–Ω—é—é —á–µ–∫–ø–æ–π–Ω—Ç

    # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º Path ‚Üí str, —á—Ç–æ–±—ã –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –Ω–µ ¬´—Å–ø–æ—Ç–∫–Ω—É–ª–∞—Å—å¬ª
    data_yaml = str(args.data)

    print("\nüöÄ –°—Ç–∞—Ä—Ç –æ–±—É—á–µ–Ω–∏—è ...\n")
    model.train(
        data=data_yaml,
        epochs=args.epochs,
        imgsz=args.imgsz,
        batch=args.batch,
        device=args.device,
        name=args.name,
        resume=args.resume,
        # –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ (–ø—Ä–∏ –∂–µ–ª–∞–Ω–∏–∏):
        # workers=8,
        # lr0=0.01,
        # optimizer="SGD",
    )

    print("\n‚úÖ –û–±—É—á–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ.")
    print(f"   –õ–æ–≥/—á–µ–∫–ø–æ–π–Ω—Ç—ã: runs/detect/{args.name}")


if __name__ == "__main__":
    main()